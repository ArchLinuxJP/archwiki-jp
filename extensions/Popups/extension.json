{
	"name": "Popups",
	"namemsg": "popups-message",
	"author": [
		"Prateek Saxena",
		"[https://www.mediawiki.org/wiki/Reading/Web/Team Readers Web Team]",
		"Yair Rand"
	],
	"url": "https://www.mediawiki.org/wiki/Extension:Popups",
	"descriptionmsg": "popups-desc",
	"license-name": "GPL-2.0-or-later",
	"requires": {
		"MediaWiki": ">= 1.30.0"
	},
	"AutoloadClasses": {
		"Popups\\PopupsHooks": "includes/PopupsHooks.php",
		"Popups\\PopupsContext": "includes/PopupsContext.php",
		"Popups\\PopupsGadgetsIntegration": "includes/PopupsGadgetsIntegration.php",
		"Popups\\UserPreferencesChangeHandler": "includes/UserPreferencesChangeHandler.php",
		"Popups\\EventLogging\\EventLogger": "includes/EventLogging/EventLogger.php",
		"Popups\\EventLogging\\NullLogger": "includes/EventLogging/NullLogger.php",
		"Popups\\EventLogging\\MWEventLogger": "includes/EventLogging/MWEventLogger.php",
		"Popups\\EventLogging\\EventLoggerFactory": "includes/EventLogging/EventLoggerFactory.php"
	},
	"ConfigRegistry": {
		"popups": "GlobalVarConfig::newInstance"
	},
	"Hooks": {
		"BeforePageDisplay": [
			"Popups\\PopupsHooks::onBeforePageDisplay"
		],
		"ResourceLoaderGetConfigVars": [
			"Popups\\PopupsHooks::onResourceLoaderGetConfigVars"
		],
		"GetPreferences": [
			"Popups\\PopupsHooks::onGetPreferences"
		],
		"PreferencesFormPreSave": [
			"Popups\\UserPreferencesChangeHandler::onPreferencesFormPreSave"
		],
		"UserGetDefaultOptions": [
			"Popups\\PopupsHooks::onUserGetDefaultOptions"
		],
		"MakeGlobalVariablesScript": [
			"Popups\\PopupsHooks::onMakeGlobalVariablesScript"
		],
		"LocalUserCreated": [
			"Popups\\PopupsHooks::onLocalUserCreated"
		]
	},
	"MessagesDirs": {
		"Popups": [
			"i18n"
		]
	},
	"EventLoggingSchemas": {
		"Popups": 17807993,
		"VirtualPageView": 17780078
	},
	"config": {
		"@PopupsVirtualPageViews": "@var bool: Whether the extension should log virtual pageviews.",
		"PopupsVirtualPageViews": false,
		"@PopupsHideOptInOnPreferencesPage": "@var bool: Whether the option to enable/disable Page Previews should be hidden on Preferences page. False by default",
		"PopupsHideOptInOnPreferencesPage": false,
		"@PopupsOptInDefaultState": "@var string:['1'|'0'] Default Page Previews visibility for old accounts. Has to be a string as a compatibility with beta feature settings. For more info see @T191888",
		"PopupsOptInDefaultState": "0",
		"@PopupsOptInStateForNewAccounts": "@var string:['1'|'0'] Default Page Previews visibility for newly created accounts (from Q2 2018). For more info see @T191888",
		"PopupsOptInStateForNewAccounts": "0",
		"@PopupsConflictingNavPopupsGadgetName": "@var string: Navigation popups gadget name",
		"PopupsConflictingNavPopupsGadgetName": "Navigation_popups",
		"@PopupsGateway": "Which gateway to use for fetching Popups data. Available options: [mwApiPlain|restbasePlain|restbaseHTML]. Full and always up to date list is available in src/gateway/index.js",
		"PopupsGateway": "mwApiPlain",
		"@PopupsRestGatewayEndpoint": "Specify a REST endpoint where summaries should be sourced from. Endpoint must meet the spec at https://www.mediawiki.org/wiki/Specs/Summary/1.2.0",
		"PopupsRestGatewayEndpoint": "/api/rest_v1/page/summary/",
		"@PopupsEventLogging": "Whether we should log events. Note if this is enabled without using that variable events will be logged for all users without any sampling! Be careful!",
		"PopupsEventLogging": false,
		"@PopupsStatsvSamplingRate": "Sampling rate for logging performance data to statsv.",
		"PopupsStatsvSamplingRate": 0,
		"@PopupsPageBlacklist": "Blacklisted pages are subject to the HTML cache policy of the wiki. A purge on a blacklisted page maybe needed to see the effect of this configuration variable. Every blacklisted page should be defined by a canonical name, eg: Special:Userlogin",
		"PopupsPageBlacklist": [ "Special:Userlogin", "Special:CreateAccount" ]
	},
	"ResourceModules": {
		"ext.popups.images": {
			"selector": ".mw-ui-icon-{name}:before",
			"class": "ResourceLoaderImageModule",
			"images": {
				"popups-settings": "resources/ext.popups.images/cog.svg",
				"popups-close": "resources/ext.popups.images/close.svg",
				"preview-generic": "resources/ext.popups.images/sad-face.svg",
				"footer": {
					"file": {
						"ltr": "resources/ext.popups.images/footer-ltr.svg",
						"rtl": "resources/ext.popups.images/footer-rtl.svg"
					}
				},
				"preview-disambiguation": {
					"file": {
						"ltr": "resources/ext.popups.images/multiple-articles-ltr.svg",
						"rtl": "resources/ext.popups.images/multiple-articles-rtl.svg"
					}
				}
			}
		},
		"ext.popups": {
			"scripts": [
				"resources/ext.popups/index.js"
			]
		},
		"ext.popups.main": {
			"scripts": [
				"resources/dist/index.js"
			],
			"styles": [
				"src/ui/index.less"
			],
			"messages": [
				"popups-settings-title",
				"popups-settings-option-simple",
				"popups-settings-option-simple-description",
				"popups-settings-option-advanced",
				"popups-settings-option-advanced-description",
				"popups-settings-option-off",
				"popups-settings-save",
				"popups-settings-cancel",
				"popups-settings-enable",
				"popups-settings-help",
				"popups-settings-help-ok",
				"popups-preview-no-preview",
				"popups-preview-footer-read",
				"popups-preview-disambiguation",
				"popups-preview-disambiguation-link"
			],
			"dependencies": [
				"ext.popups.images",
				"mediawiki.experiments",
				"mediawiki.storage",
				"mediawiki.Title",
				"mediawiki.jqueryMsg",
				"mediawiki.ui.button",
				"mediawiki.ui.icon",
				"mediawiki.Uri",
				"mediawiki.user"
			]
		}
	},
	"ResourceFileModulePaths": {
		"localBasePath": "",
		"remoteExtPath": "Popups"
	},
	"ServiceWiringFiles": [
		"includes/ServiceWirings.php"
	],
	"manifest_version": 1
}
